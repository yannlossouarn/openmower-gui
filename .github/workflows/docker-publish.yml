name: Build

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches:
      - 'master'

permissions:
  packages: write

env:
  REGISTRY: ghcr.io
  REGISTRY_IMAGE: ghcr.io/${{ github.repository }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        arch: [ linux/arm64 ]
        include:
          - arch: linux/arm64
            builder: buildjet-4vcpu-ubuntu-2204-arm
    name: Build - ${{matrix.arch}}
    runs-on: ${{matrix.builder}}
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Docker layers
        uses: buildjet/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image by digest
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          platforms: ${{ matrix.arch }}
          context: .
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export digest
        run: |
          echo "digest=${{ steps.build-and-push.outputs.digest }}" >> $GITHUB_ENV
          mkdir -p /tmp/digests
          digest="${{ steps.build-and-push.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Tag and push Docker image with master tag
        run: |
          docker pull ${{ env.REGISTRY_IMAGE }}@${{ steps.build-and-push.outputs.digest }}
          docker tag ${{ env.REGISTRY_IMAGE }}@${{ steps.build-and-push.outputs.digest }} ${{ env.REGISTRY_IMAGE }}:master
          docker push ${{ env.REGISTRY_IMAGE }}:master

      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests

      - name: Set up QEMU (arm64)
        if: runner.arch != 'arm64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up QEMU (x64)
        if: runner.arch != 'x64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
